name: proba_workflow

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    linter_job:
        name: Linter Job
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linter
              run: npm run lint

    cypress_job:
        name: Cypress Job
        runs-on: ubuntu-latest
        needs: linter_job

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run Cypress tests
              id: cypress
              uses: cypress-io/github-action@v6
              continue-on-error: true
              with:
                  build: npm run build
                  start: npm start -- -p 3050
                  wait-on: 'http://localhost:3050'
                  wait-on-timeout: 120

            - name: Create artifact with result
              run: echo "${{ steps.cypress.outcome }}" > result.txt

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: cypress-result
                  path: result.txt

    add_badge_job:
        name: Add Badge Job
        runs-on: ubuntu-latest
        needs: cypress_job
        if: always()

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: cypress-result

            - name: Generate output from artifact
              id: cypress_outcome
              run: echo "cypress_outcome=$(cat result.txt)" >> $GITHUB_OUTPUT

            - name: Update badge in README
              uses: ./.github/actions/update-badge
              with:
                  outcome: ${{ steps.cypress_outcome.outputs.cypress_outcome }}

            - name: Commit and push changes
              run: |
                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git add README.md
                  git diff --quiet && git diff --staged --quiet || (git commit -m "Update Cypress badge [skip ci]" && git push)

    deploy_job:
        name: Deploy Job
        runs-on: ubuntu-latest
        needs: cypress_job

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Deploy to Vercel
              uses: amondnet/vercel-action@v20
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
                  vercel-args: '--prod'

    notification_job:
        name: Notification Job
        runs-on: ubuntu-latest
        needs: [linter_job, cypress_job, add_badge_job, deploy_job]
        if: always()

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Send email notification
              uses: ./.github/actions/send-notification
              env:
                  SMTP_HOST: ${{ secrets.SMTP_HOST }}
                  SMTP_PORT: ${{ secrets.SMTP_PORT }}
                  SMTP_USER: ${{ secrets.SMTP_USER }}
                  SMTP_PASS: ${{ secrets.SMTP_PASS }}
              with:
                  recipient: ${{ secrets.EMAIL_RECIPIENT }}
                  linter_result: ${{ needs.linter_job.result }}
                  cypress_result: ${{ needs.cypress_job.result }}
                  badge_result: ${{ needs.add_badge_job.result }}
                  deploy_result: ${{ needs.deploy_job.result }}